{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","undefined","name","href","email","className","CommentInfo","comment","body","CommentList","comments","length","map","id","PostInfo","post","title","PostList","posts","getComments","commentsFromServer","filter","postId","postsFromServer","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"qx8IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,YACRC,IAAdD,EAAKE,KACH,mBAAGC,KAAI,iBAAYH,EAAKI,OAASC,UAAU,WAA3C,SACGL,EAAKE,OAGR,2CCRSI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKF,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGE,EAAQL,OAGX,+BACG,SAGH,mBAAGC,KAAI,iBAAYI,EAAQH,OAASC,UAAU,qBAA9C,SACGE,EAAQH,WAIb,qBAAKC,UAAU,oBAAf,SACGE,EAAQC,WCdFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKL,UAAU,cAAf,SACuB,IAApBK,EAASC,OACRD,EAASE,KAAI,SAAAL,GAAO,OAClB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQM,OAG9C,mBAAG,UAAQ,oBAAX,iCCLOC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKV,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,EAAKC,QAGR,8BACG,cAMD,cAAC,EAAD,CAAUhB,KAAMe,EAAKf,aAIzB,mBAAGK,UAAU,iBAAb,SACGU,EAAKP,OAGR,cAAC,EAAD,CAAaE,SAAUK,EAAKL,eCzBnBO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMN,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCOtC,SAASM,EAAYN,GACnB,OAAOO,EAAmBC,QAAO,SAAAd,GAAO,OAAIA,EAAQe,SAAWT,KAGjE,IAAMK,EAAQK,EAAgBX,KAAI,SAAAG,GAAI,kCACjCA,GADiC,IAEpCf,MAVea,EAUDE,EAAKS,OATZC,EAAgBC,MAAK,SAAA1B,GAAI,OAAIA,EAAKa,KAAOA,MAUhDH,SAAUS,EAAYJ,EAAKF,MAX7B,IAAiBA,KAcJc,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCrBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b4e559e7.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  user.name !== undefined ? (\n    <a href={`mailto:${user.email}`} className=\"UserInfo\">\n      {user.name}\n    </a>\n  ) : (\n    <b>Anonymous</b>\n  )\n);\n","export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      <span>\n        {' by '}\n      </span>\n\n      <a href={`mailto:${comment.email}`} className=\"CommentInfo__email\">\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length !== 0 ? (\n      comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </div>\n);\n","import './PostInfo.scss';\n\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by '}\n\n        {/* { post.user !== undefined\n          ? (<UserInfo user={post.user} />)\n          : (<b>Anonimus</b>)\n        } */}\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getUser(id) {\n  return usersFromServer.find(user => user.id === id);\n}\n\nfunction getComments(id) {\n  return commentsFromServer.filter(comment => comment.postId === id);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComments(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}